<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageListGridPageBar.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>229, 29</value>
  </metadata>
  <data name="imageListGridPageBar.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAA2
        FgAAAk1TRnQBSQFMAgEBDQEAARgBAAEIAQABDAEAAQwBAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAEw
        AwABMAMAAQEBAAEYBgABG/8ANgAD/wHvAecB4gHtAcABlgHsAb4BkwHsAb4BkwHsAb4BkwHuAb0BkgHu
        Ab4BkwHtAcEBmHUAAfQBzAGmAe0BnwFZAfABtwGDAfABtwGFAfABtwGFAfABtwGFAfABtwGEAfABtwGF
        AfABuAGFcgAD9QHtAZ4BVwHuAdcBwgH0AvMC9AHzAvQB8wL0AfMC9AHzAvQB8wL0AfNyAAH7AvoB7QGd
        AVUB8wHrAeMGAAHsAckBqAHwAd8BzgP/ewAB7gGrAXAB8AG/AZMB8wHqAeIB8wHqAeIB7AG7AY4B7QGa
        AVAB8QG8AYoB8gHsAeYB8wHyAfEB7wHnAdgB8wHwAetvAAHwAekB4gHuAawBcQHtAZsBUQHtAZwBUgHt
        AZsBUQHtAZoBUAHtAZoBUAHvAcoBpgHYAaIBRwHNAYABAAHhAbsBfHUABv0B8wG8AYoB7QGaAVAB8AG7
        AYkB9QP0AfAB6QHMAYEBAgHsAdIBpnsAAe8B1gHAAe0B2QHGA/SHAAP3/wAPAAPPA6oDlxWWA6IDxgwA
        AfgB+gH5Ad4B7wHkAd4B7wHkAdwB7AHgAfcB+QH3EgAD8QHdAdwB7gHdAdwB6gLeAekC3AHpAuQB7QwA
        A/0D+gPxA+gD4gPkAdYB4QHbAbIB1AG4AagB2wG5A+wD+wOkAdcBkwEtAcsBhgEgAcoBhgEgAcoBhgEg
        AcoBhgEgAcoBhgEgAcoBhgEgAcoBhgEgAcoBhgEgA2QDqAwAAeIB8wHoAT4B1wFxATMBzAFmASIBswFE
        AdgB5wHYDwAC4AHqAUgBaQHPAQ8BLQHqAQ8BLQHeAREBMwHdARcBLQGwAkQBpAGRAYMBzQkAAaIB0AHb
        AXIBtgHYAXIBtgHYAX4BsQHJAcwC0gPkAbQB1QHFAT4BuwFmAVUBzAFmA+AD9QH/AZkBAAzqAfgB6wHW
        Af8B7AHMAf8CzAH/AswB/wLMAcoBhgEgA5YMAAHkAfUB6gFEAd0BdwEzAcwBZgEiAbMBRAHYAecB2AwA
        A+4BQQFiAeoBAAEzAf8BAAEzAf8BAAEzAf8BAAEzAf8BAAEzAe4BIgEzAaoCMwGZAZIBhAHNBgABIgGZ
        Ad0BZgHdAf8BZgHMAf8BVQHMAe4B2ALpAcAB3AHAAZEBxgGiATMBuwJmAcwBZgHIAdoByAHVAuIB/wGZ
        AQAG9gPxA+wD6wH4AesB1gH/AeUBzAH/AdABzAH/AswBygGGASADlgMAAdgB5wLYAecC2AHnAdgBvAHh
        Ab4BSgHXAXEBMwHMAWYBIgGzAUQBpAHNAaQB2AHnAtgB5gHYAfcB+QH3AwABvAHFAegBBgE5AfQBAAEz
        Af8BAAEzAf8BAAEzAf8BAAEzAf8BAAEzAf8BAAEzAegBIgEzAbsCRAGkAuQB7QMAASIBmQHdAWYC/wFm
        Ad0B/wGLAdUB9wFqAdUBkQFmAd0BmQFmAd0BmQFPAdIBggFmAd0BmQFmAd0BdwFPAdIBdwH/AZkBAAb/
        A/oD9wPvA+oB9gHrAdkB/wHXAcwB/wLMAcoBhgEgA5YDAAEXAZwBIgFEAb4BZgFEAbMBZgFKAbsBTwE+
        AcwBZgEzAcwBZgEtAcQBWwEiAbMBRAEiAbMBRAEiAbABRAHcAesB4AMAAUoBWwHdASgBRAH/AWYBdwHd
        AWYBggH/AWYBmQH/AYgBmQH/AYgBmQH/AYgBmQH/AUQBdwH/Ai0BsALcAekDAAEiAbAB3QFmAv8BZgL/
        AYgB6AH5AaUB2AG7AUUB3QF3ATkB0gFsAU8B3QGCAWYB3QGZAUQBuwFVAUQBsAFsAf8BmQEAAf8BmQEB
        Af8BmQEBAf8BmQEBAf8BmQEBAf8BmQEBAf8BmQEBAf8BmQEBAf8BmQEBAf8BmQEBAcoBhgEgA5YDAAEz
        AaoBMwF3Af8BmQFmAf8BmQFmAe4BmQFmAcwBdwEzAcwBZgEzAcwBZgEzAcwBZgEzAcwBZgEzAcwBZgHe
        Ae8B5AMAASIBVQHdAUQBdwH/AeIC4wPfA+gJ/wFnAZkB/wERATMB3QLeAekDAAEiAbsB3QFmAv8BZgL/
        AXcC7gHYAukD8QGyAeUBwwFVAe4BiAFmAcwBmQHkAu8D9QH/AZkBAAH/Ad0BuwH/Ad0BuwH/Ad0BuwH/
        Ad0BuwH/Ad0BuwH6AdgBtwH4AdYBtAH9AdYBrQH/AcwBqgHKAYYBIAOWAwABMwGqATkBggH/AaoBdwH/
        AaoBdwH/AaQBbAHoAZkBZgHMAXcBMwHMAWwBSgHXAXcBRAHdAXcBPgHXAXEB3gHvAeQDAAE5AWAB3QFE
        AXcB/wG6Aa0BzAGdAa4B5wGmAbcB/AGpAboB/wGpAboB/wGpAboB/wFEAXcB/wEPAS0B3gHdAdwB6gMA
        ASIBqgHdAWYB4wH/AWYC/wF3Au4B0wLlA/EByQHuAdQBWQHkAYcBVQHMAYgB2wLiA/EB/wGZAQAP/wPx
        A+oB+AHrAdYB/wLMAcoBhgEgA5YDAAHfAewB4QHqAfUB8AHqAfUB8AHVAfMB4gF3Af8BpAFmAe4BmQEo
        AbsBVQG8AeEBwgHkAfUB6gHiAfMB6AH4AfoB+QMAAZgBqQHiAXEBjgH/ATMBVQHuASIBVQH0ASIBVQH/
        ASIBVQH/ASIBSgH/AQsBMwH/AQABMwH/AQ8BLQHqAd0B3AHuAwABIgGqAd0BZgHMAf8BZgHdAf8BdwLu
        AdMC5QPxAe4B8gHuAcoB7gHVAbIB5QHDAdoC2QPyAf8BmQEAD/8D8QPqAfgB6wHWAf8CzAHKAYYBIAOW
        DAAB6gH1AfABdwH/AaoBZgH/AZkBRAGzAUQB2AHnAdgMAAHfAeQB9QF3AYgB/wFmAZkB/wEzAWYB/wEz
        AWYB/wEzAWYB/wEzAVUB/wERATMB/wEAATMB/wGEAZoB3gYAASIBqgHdAWYBzAH/AWYBzAH/AXcBzAHu
        AZMBtQG3AZABqQGtAZABqQGtAZABqQGtA8AD9AMAAf8BmQEAAeQBwgGPAeQBwgGPAeQBwgGPAeIBwAGM
        Ad0BuwGHAd0BuwGHAdoBuAGFAdUBswGAAdUBswGAAcsBhwEhA5oMAAHqAfUB8AGCAf8BqgF3Af8BmQEt
        Ab4BTwHYAecB2A8AAcMBzQH0AoAB/wF3AY4B/wFKAXcB/wFEAWYB/wEzAVsB/wERATkB9AFEAWYB7gLg
        AeoGAAEiAaoB3QFmAcwB/wGIAaoBzAGEAqYBhAKmAYQCpgFtAs0BZgHdAf8B/gL/BgAB/wGZAQAB/wG7
        AWYB/wG7AWYB/wG7AWYB/wG7AWYB/wG7AWYB/wG7AWYB/wG7AWYB/wG7AWYB/wGZASIB1wGTAS0DrQwA
        Ad8B7AHhATMBqgE4ATMBqgEzARcBnAEiAdgB5wHYEgAC4gH1AcgB1QHuAVUBbAHdAkQB3QFSAXoB2gHA
        AcoB5wLvAfAJAAFzAcMB3wEiAaoB3QGpAqoG1wO3ASkBfgGrAU8BpAHdA/UGAAGkAqAB/wGZAQAB/wGZ
        AQAB/wGZAQAB/wGZAQAB/wGZAQAB/wGZAQAB/wGZAQAB/wGZAQAB/wGZAQADpAPuUQAD3AGkAqABnQKb
        AaQCoA8AA/ED4RjcA+ED5yoAA/UD7wPIA64DpwPCA+UD8RIAAe4B6gHpAe8B5AHeAe8B5AHYAe8B5gHg
        AfoC+QkAA/8DghhWA4kD4RUAAfUB8gHwAd4ByAGiAd4ByAGEAeYByAGEAeYBuAGEAwAD9QPTAbECrwOO
        A2sDYAN7AakCpwPIA+wMAALeAcgB1QGFAVIB7gGIATMB7gGIASIB7gGOATkB4QG5AZED/wYAA/8DRAYA
        AzEDewOGAyIGAANWA9wVAAGqAXcBZgHMAZkBRAHMAWYBMwHMAXcBAAHMAXcEAAPDA5UDZwPVA68DZgNS
        A14DhgO7A+8DAAHMAZkBMwHEAbMBkQHMAWYBNAH/AcwBZgHdAYgBRAHLAZgBaAHLAZgBhwHMAXcBIgHM
        AZkBmAYAA/8DRAYAA1YD6gP/A0QGAANWA9wSAAPxAdgBugGtAcwBmQFmAcwBdwEzAcwBZgEoAcwBZgER
        AwADpAOqA+wD9AO8A4sDegNpA1UDkAPtAwAB3QGuAVsB6AGjAVsB/wHMAZgB7gGwAVsB2AHLAaMD/wMA
        A+oB3wHIAbIGAAP/A0QDAAMiA4ED7wP/A2wDGwMAA1YD3BIAAZ0CSQL6AfkB8AHqAeQB8AHqAd8B8AHk
        Ad8B8AHkAd8DAAGuAqwD4QP2A8cBtwK2A8UDnQN8A1wDfwPsAwAB3QG1AWYB/wHXAaoB/wHMAZkB1wGZ
        AU8B1wHKAb0D/wYAA+MD6gMAA/8DRAMAA4UD/wb+A+oDVwMAA1YD3AMAAYgBMwEAAXcBEQEAAWYBMwEA
        AYgCMwHvAukBmgJoEgADxwPQBncBSgGOAUoBygHMAcoD7APQA2YDmQPuAwAB2AG2AZQB+gHuAdcB8AHK
        AaYB/wHMAYgB3QGqAWYDwAHMAYgBVQHMAYgBNAHMAZkBNAHMAXcBVQHvAukD/wNVA30D0gGwAq8DUQNE
        A7kDzgNlA1YD3AMAAcwBjgFVAcwBbAEcAcwBZgEAAccBbAEAAaQBdgFwA/8SAAPFA7kDkwEcAbsBSgFV
        AfQBjgEAAZkBMwGgAccBpQGWAacBnAGGAoUDzQP1AwAB2AG9Aa0BzgGsAX8B3gHIAZoB3wHIAZwB3wHX
        AbkBzAGqAYgB7gG8AY0B+QHWAa8B/wHhAbsB7gHAAaQB7wHkAeID/wNaA6kDrgM7AwoDAANQA8YDhgNW
        A9wDAAHMAZkBdwHMAXcBPgHMAWYBIgG1AXcBFwGqAYIBcQGaAccBmgHwAfUB8gGxAd4BuAGaAd4BsQGa
        Ad4BuAGaAd4BuAMAA/oDygOGATMB3QJVAf8BmQEiAd0BVQFEAcYBSgFVAX0BWwG3ArUD4gYAA/oD8AkA
        A/AB1wGfAWAB+QHBAYIB/wHMAZkB5wGxAYgB7wHkAd4D/wNaA6kDwAmGAZACjwHSAtEDhgNWA9wDAAGY
        ATUBAgGYATUBAgGYATUBAgGpAVcBNQHvAukDAAEiAZkBMwFmAcwBdwEzAcwBZgEzAcwBZgEzAcwBZgYA
        AZwByAGyATMBzAFmAUQB3QF3AWYB/wGZAWYB/wGZATMBqgFEAYcCmAPMDAAB3wHIAbICzAHLBv8CywGY
        Ad0BqgFEAf8BzAGIAZkBZgECAe4BqgF3Ae8B5AHeA/8DUwNxEqkDWgNWA9wVAAGSAdgBowFxAcwBcQEz
        AcwBZgEzAcwBZgEzAcwBWwYAAc0B4QHXAVUB3AGIAWYB/wGZAWYB/wGZAVUBzAFmAWgBlQFoA7wD4wwA
        AeoC4QHMAZkBIwHdAaQBYAHdAaQBYAHdAZkBMwH5AcEBYAHXAYgBVQLZAdgB3wHAAZwB9QHwAe0D/wN0
        A1MSWgNPA4ED4RUAAfkB+gH5AeQB8AHkAd8B8AHkAd8B8AHkAd8B8AHhCQABmQG6AakBTwHSAYIBZgH/
        AZkBMwGqAWYDrAPlEgAB8AHqAeUB3QGZAUoB3QGZATMB3QF3ATMB1wGfAVUB5QHRAc8JACH/A/EwAAGI
        AaoBmQEzAbsBZgOyA9AD8cAAA94D9QMAA/UD4APkBgAD4wPgA/UMAAbiA/8DAAPsA94D7AYAA/UD3gPk
        BgAD3gPgA/UMAAPeA/UDAAP1A+AD3gYAA+MD3gP1AwADmQPpAwAD7wOqA7IDAAP/A78DpgPuBgAG/wOp
        A7IG/wPTAaQCoAPeBgAD6wF2AnUDsgP/AwADhQOEA+4MAAOGA+cD/wPuA4QDhgP/AwADsQNfA+kDAAOG
        A9gD7gOjA3gBoAKeA/ADygOOA5ID7AMAA/oD2wOeA3YDpQPvA7cDhwORA94GAAPqA1QDYAO8A+8DfgM4
        A4sD7gP1BgADXANnA7MD4wNsA0QDkAPiAaMCnwNAA+cDAAN/A7cDmQNpA1oDlwO4A4IDbAODA+wDAAHt
        AuwBkAKPA2ADWQOiAbECrwN5A2gDhgPeBgAD6gNYAzcDYAOvA4YDJwNEA4QD4AYAA1gDOgNsA6kDcQMn
        A0gDlAGkAqADSgPoAwADYAN2A1UDQgNJA2YDeQNYA18BdgJ1AesC6gMAA4gDSANCA0YDcwNmBlUDhgPe
        BgAD6gNnA0IDRgNzA2YGMwNCA5UD7AMAA2kDTQNCA3EDYAM5AzMDVQNmA1QD6QMAA1oDZQNCAzUDNwNl
        A2sDSwNJAWoCaQPqAwADhAM9AzADOAFgAl8DZQNCA0gDZgPeBgAD6wFyAnADWANUA24DZQNEAz0DSAOF
        A+wDAAN4A1kDWANsA2IDRgNEA1UDZwNYA+kDAANcA6MDggNCAywDhgOnA2MDPANbA+kDAAPcA3sDNAMs
        AYcChgOjA1sDOANmA94GAAPsAX0CfANkA4ABsgKxA5EDUgNfAY8CjQPUA/oDAAN7A2QDhAOsA4sDWQNl
        A5oDqgNoA+kDAANYA+MDAAOAAzUDhgMAA8ADVQNUA+kGAAPfA2YDNwOHA/8DogNOA1UD3gYAA+0DiwOG
        A9MDAAOYA2wDngP/CQADkQOGA8AD7gOZA3cDnQPvA7EBdgJ1AesC6gMAAWoCaQPlAwAD0wN6A4sDAAPq
        Aa0CqgNvA+sGAAPtA98DfQOTA/8D4gOlAXACbgPeBgAD7gOlA8QD7AMAAawCqgOkA9YD/wkAAakCpwPQ
        A+MD8AOoA6YD4QP1A7oDkgPtAwAD6gP5AwAD+gPsA+0GAAPuA+sD+gwAA+wD7QYAA/QD6wP1BgAD+gPv
        A/AGAAbuA/oMAAPuA/oDAAP6Bu4GAAPwA+0D+pAAAUIBTQE+BwABPgMAASgDAAEwAwABMAMAAQEBAAEB
        BQABgAEBFgAD/wEAAf8B8AYAAf8B8AYAAYABMAYAAYABMAcAATAGAAEYAfAGAAGABwABgAcAAeAHAAH4
        AfAGAAH7AfAGAAH/AfAHAAEPAQcB4AF4BAABDwEHAcABOAQAAQ8BBwGAARgEAAEIAQABgAEIBAABCAEA
        AYABCAQAAQgBAAGAAQgEAAEIAQABgAEIBAABCAEAAYABCAQAAQ8BBwGAARgBAQMAAQ8BBwHAARgBAwMA
        AQ8BBwHgATgBAwMAAQ8C/wH+AR8DAAEPAf8BwAE/AQcDAAEPAeABgAEeAQMDAAEPAeABgAEIAQMDAAEP
        AcABgAEIARMDAAEPAcABgAEIARkDAAEIAR8BgAEIBAABCAEfAYABCAQAAQgBAAGAARkBwAMAAQgBIAHA
        ATwEAAEPAeABwAE8BAABDwLgAX4BBwMAAQ8B/wHwAX8B/wIABv8CAAGRAY8BEQGMAXkBGAIAAZEBDAEB
        AYQBeAEIAgABgAEIAQEBgAEYAwABgAEIAQEBgAEYAwABgAEIAQEBgAEIAwABgAEIAQEBgAEIAwABgAEI
        AQEBgAEIAwABkQEMAQEBhAE4AwABkQEMAQEBhAE4AwABkQGPATEBjAF5ARgCAAb/AgAL
</value>
  </data>
  <metadata name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="$this.Localizable" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="&gt;&gt;imageListGridPageBar.Name" xml:space="preserve">
    <value>imageListGridPageBar</value>
  </data>
  <data name="&gt;&gt;imageListGridPageBar.Type" xml:space="preserve">
    <value>System.Windows.Forms.ImageList, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </data>
  <data name="&gt;&gt;gridView1.Name" xml:space="preserve">
    <value>gridView1</value>
  </data>
  <data name="&gt;&gt;gridView1.Type" xml:space="preserve">
    <value>DevExpress.XtraGrid.Views.Grid.GridView, DevExpress.XtraGrid.v9.2, Version=9.2.8.0, Culture=neutral, PublicKeyToken=646cb77dd9f4ebfa</value>
  </data>
  <data name="&gt;&gt;$this.Name" xml:space="preserve">
    <value>EFDevGrid</value>
  </data>
  <data name="&gt;&gt;$this.Type" xml:space="preserve">
    <value>DevExpress.XtraGrid.GridControl, DevExpress.XtraGrid.v9.2, Version=9.2.8.0, Culture=neutral, PublicKeyToken=646cb77dd9f4ebfa</value>
  </data>
</root>