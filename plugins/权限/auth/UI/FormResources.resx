<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>125, 56</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACG
        BwAAAk1TRnQBSQFMAgEBAgEAAegBBwHoAQcBEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEYBgABDNUAAdIBuQGYAbUBcAE5AcIBigFdAyUDIAMdAxkDFQMSAw8DDAG0AXcBSQGg
        AVMBGQHIAaYBggYAA/8D/gP9A/sD+gP5A/oD+wP8A/1yAAG8AXgBQQHvAcoBkwHsAcYBjAM0Ay8DKwMo
        AyMB4wG5AXsB4gG5AXkDGAHgAbcBdQHWAaIBUgGhAVQBGgMAA/8D/QP5A/UD7wPqA+cD6APsA/ID+QGh
        AVcBLQGoAYcBd2wAAcABfgFIAfEBzwGYAe8ByQGSA0UDQAM8AzcDMwHlAb0BfQHkAboBfAMnAeEBuAF5
        AdgBpgFUAaMBVwEcBgAG/xIAA/8DAAP+AZYBTAEmAaQBVAEraQABxQGDAU4B9AHSAZ4B8QHNAZYDWANT
        A04DSQNEAeYBvgGAAeUBvQF9AzYB4wG5AXsB2wGnAVgBpQFaASADAAHuAeYB4wG8AXEBRAG5AWsBPwG3
        AWkBPQG0AWUBOgGyAWIBNwGwAV8BNQGuAVsBMgGuAVwBMgHSAbEBogYAAdgBvwG0AYgBOgEdAa0BZgFC
        ZgAByQGIAVMB9QHVAaUB9AHRAZ0DawNmA2EDXANXA1IDTQNIAeUBvQF9Ad0BqQFbAagBXgElAwAB7wHo
        AeUBtQFjATQBrwFaAS4BrwFaAS0BrQFYASwBqwFWASsBqQFTASoBqAFRASkB0QGtAZwMAAGaAU0BKAGg
        AUoBJQH5AfgB92MAAc4BjQFZAfgB2wGrAfYB1QGkAfQB0QGcAfEBzQGVAe4ByQGOAewBxgGJAesBxAGH
        AeoBwwGFAekBwQGDAegBvwGBAeYBvgGAAd8BrAFdAaoBYQEoAwAB7wHpAeYBuwFrATcBuQFnATUBsQFd
        AS8BsQFcAS8BrwFaAS4BrgFYAS0B1AGvAZsPAAGrAVwBMgGgAUcBIwHRAasBmmMAAdIBkgFeAfsB3QGx
        AfYBzwGVAfQBywGKAfEBxQGCAe0BwAF6AesBvAFyAegBuAFrAecBtgFqAeUBtAFoAeQBsgFmAeMBsAFj
        AeIBrwFhAa4BZgEtAwAB7wHpAeYBwQFyATwBwAFwATkBvAFrATcBswFgATABsAFbAS0BygGNAWMSAAGv
        AV4BNAGkAU0BJwG+AX8BXWMAAdcBlwFkAf0B4gG3AeQBsAF7AeQBsAF5AeQBsAF2AeQBsAF0AeQBrwFw
        AeMBrgFsAeIBrAFqAeIBrgFoAeIBrQFoAeIBrgFnAeMBsQFkAbEBagEyAwAB8AHqAeYBxQF5AUMBxAF2
        AUABxAF3AUABvQFtATkBtQFiATIBsQFcAS0BzgGRAWcMAAHpAd0B1wGjAUsBJgGqAVQBKgHHAZMBdWMA
        AdoBnAFpAf8B5QG9AeIBrAF4BvwD+gP5A/gD9wP2A/UB4gGtAWgB5QG0AWgBtQFvATgDAAHwAeoB5gHI
        AX4BSgHHAXwBRwHFAXkBQQHHAX0BRwHBAXMBPwG2AWMBMgGyAV4BLgHEAX0BTgHSAaUBgwHiAc4BwgHR
        AaUBiAGxAWABNgGkAU0BJgGvAVoBLgHmAdgB0GMAAd4BoAFuAf8B6QHDAd8BpwF0A/4G1gPVA9QD0wPR
        A/gB4QGqAWkB5wG3AWoBuQF0AT0DAAHxAeoB5gHMAYUBUQHIAX8BSAHYAa4BmQHTAZcBbAHJAYIBTQHI
        AX8BSgG5AWgBNQG0AWEBMQGwAVsBLQGuAVkBLAGrAVQBKQGpAVMBKgG1AWIBMgHCAXgBSGYAAeEBpAFx
        Af8B7AHJAdwBowFwBv8D/gP9A/wD+wb6AeABqQFqAeoBuAFuAb0BeQFDAwAB8QHrAecBzgGKAVQB2gGz
        AZ0DAAHqAd4B1gHbAagBhAHMAYYBUQHLAYUBUAHJAYABSwHBAXQBQAG7AWwBOgG8AWwBOQHAAXABOQHG
        AXwBSQHzAe8B7GYAAeMBpgF0Af8B7wHPAdkBngFsA/8J2QPYA9cD1gP8Ad8BpwFrAewBvAFxAcIBfgFI
        AwAB8QHrAeYB3gG2AaMJAAH5AfcB9gHeAbIBmQHYAaEBeQHNAYoBVgHIAX4BSAHGAXsBRQHKAYIBTwHS
        AZMBYgH1AfEB72kAAeUBqAF2Af8B9AHUAd8BrgGFFf8D/gHlAbYBiQHxAcsBkAHGAYMBTgMAAfMB7wHs
        EgAD/gHwAegB4wHnAdgBzAHrAd4B1QH6AvlvAAHnAdcBvwHlAagBdgHkAacBdRjZAdABkAFcAc0BjAFY
        AdgBwAGg/wBUAAFCAU0BPgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAE/wQAAYABAQGA
        AR8EAAGAAQEBAAEHBAABgAEBAZ8BowQAAYABAQEAATEEAAGAAQEBAAF4BAABgAEBAQAB+AQAAYACAQH4
        BAABgAEBAQAB8AQAAYABAQYAAYABAQEAAQEEAAGAAQEBEAEBBAABgAEBATgBAwQAAYABAQF+AQ8EAAGA
        AQEC/wQABP8EAAs=
</value>
  </data>
  <metadata name="barManager1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>233, 56</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>71</value>
  </metadata>
  <metadata name="popupMenuTree.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>495, 56</value>
  </metadata>
</root>