//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3625
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace EP {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetEPESSUBJ")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetEPESSUBJ : global::System.Data.DataSet {
        
        private TESGROUPINFODataTable tableTESGROUPINFO;
        
        private TESDEPTINFODataTable tableTESDEPTINFO;
        
        private TESUSERINFODataTable tableTESUSERINFO;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSetEPESSUBJ() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSetEPESSUBJ(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TESGROUPINFO"] != null)) {
                    base.Tables.Add(new TESGROUPINFODataTable(ds.Tables["TESGROUPINFO"]));
                }
                if ((ds.Tables["TESDEPTINFO"] != null)) {
                    base.Tables.Add(new TESDEPTINFODataTable(ds.Tables["TESDEPTINFO"]));
                }
                if ((ds.Tables["TESUSERINFO"] != null)) {
                    base.Tables.Add(new TESUSERINFODataTable(ds.Tables["TESUSERINFO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TESGROUPINFODataTable TESGROUPINFO {
            get {
                return this.tableTESGROUPINFO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TESDEPTINFODataTable TESDEPTINFO {
            get {
                return this.tableTESDEPTINFO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TESUSERINFODataTable TESUSERINFO {
            get {
                return this.tableTESUSERINFO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSetEPESSUBJ cln = ((DataSetEPESSUBJ)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TESGROUPINFO"] != null)) {
                    base.Tables.Add(new TESGROUPINFODataTable(ds.Tables["TESGROUPINFO"]));
                }
                if ((ds.Tables["TESDEPTINFO"] != null)) {
                    base.Tables.Add(new TESDEPTINFODataTable(ds.Tables["TESDEPTINFO"]));
                }
                if ((ds.Tables["TESUSERINFO"] != null)) {
                    base.Tables.Add(new TESUSERINFODataTable(ds.Tables["TESUSERINFO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTESGROUPINFO = ((TESGROUPINFODataTable)(base.Tables["TESGROUPINFO"]));
            if ((initTable == true)) {
                if ((this.tableTESGROUPINFO != null)) {
                    this.tableTESGROUPINFO.InitVars();
                }
            }
            this.tableTESDEPTINFO = ((TESDEPTINFODataTable)(base.Tables["TESDEPTINFO"]));
            if ((initTable == true)) {
                if ((this.tableTESDEPTINFO != null)) {
                    this.tableTESDEPTINFO.InitVars();
                }
            }
            this.tableTESUSERINFO = ((TESUSERINFODataTable)(base.Tables["TESUSERINFO"]));
            if ((initTable == true)) {
                if ((this.tableTESUSERINFO != null)) {
                    this.tableTESUSERINFO.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSetEPESSUBJ";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetEPESSUBJ.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTESGROUPINFO = new TESGROUPINFODataTable();
            base.Tables.Add(this.tableTESGROUPINFO);
            this.tableTESDEPTINFO = new TESDEPTINFODataTable();
            base.Tables.Add(this.tableTESDEPTINFO);
            this.tableTESUSERINFO = new TESUSERINFODataTable();
            base.Tables.Add(this.tableTESUSERINFO);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTESGROUPINFO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTESDEPTINFO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTESUSERINFO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetEPESSUBJ ds = new DataSetEPESSUBJ();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TESGROUPINFORowChangeEventHandler(object sender, TESGROUPINFORowChangeEvent e);
        
        public delegate void TESDEPTINFORowChangeEventHandler(object sender, TESDEPTINFORowChangeEvent e);
        
        public delegate void TESUSERINFORowChangeEventHandler(object sender, TESUSERINFORowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TESGROUPINFODataTable : global::System.Data.TypedTableBase<TESGROUPINFORow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnADMINUSERID;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnGROUPDESCRIPTION;
            
            private global::System.Data.DataColumn columnAPPNAME;
            
            private global::System.Data.DataColumn columnADMINUSERID2;
            
            private global::System.Data.DataColumn columnADMINUSERNAME1;
            
            private global::System.Data.DataColumn columnADMINUSERNAME2;
            
            private global::System.Data.DataColumn columnselected;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TESGROUPINFODataTable() {
                this.TableName = "TESGROUPINFO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TESGROUPINFODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TESGROUPINFODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADMINUSERIDColumn {
                get {
                    return this.columnADMINUSERID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GROUPDESCRIPTIONColumn {
                get {
                    return this.columnGROUPDESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn APPNAMEColumn {
                get {
                    return this.columnAPPNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADMINUSERID2Column {
                get {
                    return this.columnADMINUSERID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADMINUSERNAME1Column {
                get {
                    return this.columnADMINUSERNAME1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADMINUSERNAME2Column {
                get {
                    return this.columnADMINUSERNAME2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn selectedColumn {
                get {
                    return this.columnselected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TESGROUPINFORow this[int index] {
                get {
                    return ((TESGROUPINFORow)(this.Rows[index]));
                }
            }
            
            public event TESGROUPINFORowChangeEventHandler TESGROUPINFORowChanging;
            
            public event TESGROUPINFORowChangeEventHandler TESGROUPINFORowChanged;
            
            public event TESGROUPINFORowChangeEventHandler TESGROUPINFORowDeleting;
            
            public event TESGROUPINFORowChangeEventHandler TESGROUPINFORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTESGROUPINFORow(TESGROUPINFORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TESGROUPINFORow AddTESGROUPINFORow(decimal ID, decimal ADMINUSERID, string NAME, string GROUPDESCRIPTION, string APPNAME, decimal ADMINUSERID2, string ADMINUSERNAME1, string ADMINUSERNAME2, bool selected) {
                TESGROUPINFORow rowTESGROUPINFORow = ((TESGROUPINFORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        ADMINUSERID,
                        NAME,
                        GROUPDESCRIPTION,
                        APPNAME,
                        ADMINUSERID2,
                        ADMINUSERNAME1,
                        ADMINUSERNAME2,
                        selected};
                rowTESGROUPINFORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTESGROUPINFORow);
                return rowTESGROUPINFORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TESGROUPINFODataTable cln = ((TESGROUPINFODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TESGROUPINFODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnADMINUSERID = base.Columns["ADMINUSERID"];
                this.columnNAME = base.Columns["NAME"];
                this.columnGROUPDESCRIPTION = base.Columns["GROUPDESCRIPTION"];
                this.columnAPPNAME = base.Columns["APPNAME"];
                this.columnADMINUSERID2 = base.Columns["ADMINUSERID2"];
                this.columnADMINUSERNAME1 = base.Columns["ADMINUSERNAME1"];
                this.columnADMINUSERNAME2 = base.Columns["ADMINUSERNAME2"];
                this.columnselected = base.Columns["selected"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnADMINUSERID = new global::System.Data.DataColumn("ADMINUSERID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADMINUSERID);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnGROUPDESCRIPTION = new global::System.Data.DataColumn("GROUPDESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROUPDESCRIPTION);
                this.columnAPPNAME = new global::System.Data.DataColumn("APPNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPNAME);
                this.columnADMINUSERID2 = new global::System.Data.DataColumn("ADMINUSERID2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADMINUSERID2);
                this.columnADMINUSERNAME1 = new global::System.Data.DataColumn("ADMINUSERNAME1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADMINUSERNAME1);
                this.columnADMINUSERNAME2 = new global::System.Data.DataColumn("ADMINUSERNAME2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADMINUSERNAME2);
                this.columnselected = new global::System.Data.DataColumn("selected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnselected);
                this.columnID.Caption = "用户序列号";
                this.columnID.DefaultValue = ((decimal)(0m));
                this.columnADMINUSERID.Caption = "群组管理里员号";
                this.columnADMINUSERID.DefaultValue = ((decimal)(0m));
                this.columnNAME.Caption = "群组名";
                this.columnGROUPDESCRIPTION.Caption = "群组描述";
                this.columnAPPNAME.Caption = "子系统";
                this.columnAPPNAME.MaxLength = 18;
                this.columnADMINUSERID2.Caption = "群组管理里员2";
                this.columnADMINUSERID2.DefaultValue = ((decimal)(0m));
                this.columnADMINUSERNAME1.Caption = "群组管理员1";
                this.columnADMINUSERNAME2.Caption = "群组管理员2";
                this.columnselected.Caption = "选择";
                this.columnselected.DefaultValue = ((bool)(false));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TESGROUPINFORow NewTESGROUPINFORow() {
                return ((TESGROUPINFORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TESGROUPINFORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TESGROUPINFORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TESGROUPINFORowChanged != null)) {
                    this.TESGROUPINFORowChanged(this, new TESGROUPINFORowChangeEvent(((TESGROUPINFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TESGROUPINFORowChanging != null)) {
                    this.TESGROUPINFORowChanging(this, new TESGROUPINFORowChangeEvent(((TESGROUPINFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TESGROUPINFORowDeleted != null)) {
                    this.TESGROUPINFORowDeleted(this, new TESGROUPINFORowChangeEvent(((TESGROUPINFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TESGROUPINFORowDeleting != null)) {
                    this.TESGROUPINFORowDeleting(this, new TESGROUPINFORowChangeEvent(((TESGROUPINFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTESGROUPINFORow(TESGROUPINFORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetEPESSUBJ ds = new DataSetEPESSUBJ();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TESGROUPINFODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TESDEPTINFODataTable : global::System.Data.TypedTableBase<TESDEPTINFORow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnENAME;
            
            private global::System.Data.DataColumn columnCNAME;
            
            private global::System.Data.DataColumn columnFDEPARTMENT;
            
            private global::System.Data.DataColumn columnDEPART_LEVEL;
            
            private global::System.Data.DataColumn columnDEPT_ADMIN1;
            
            private global::System.Data.DataColumn columnDEPT_ADMIN2;
            
            private global::System.Data.DataColumn columnselected;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TESDEPTINFODataTable() {
                this.TableName = "TESDEPTINFO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TESDEPTINFODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TESDEPTINFODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ENAMEColumn {
                get {
                    return this.columnENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CNAMEColumn {
                get {
                    return this.columnCNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FDEPARTMENTColumn {
                get {
                    return this.columnFDEPARTMENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPART_LEVELColumn {
                get {
                    return this.columnDEPART_LEVEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPT_ADMIN1Column {
                get {
                    return this.columnDEPT_ADMIN1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPT_ADMIN2Column {
                get {
                    return this.columnDEPT_ADMIN2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn selectedColumn {
                get {
                    return this.columnselected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TESDEPTINFORow this[int index] {
                get {
                    return ((TESDEPTINFORow)(this.Rows[index]));
                }
            }
            
            public event TESDEPTINFORowChangeEventHandler TESDEPTINFORowChanging;
            
            public event TESDEPTINFORowChangeEventHandler TESDEPTINFORowChanged;
            
            public event TESDEPTINFORowChangeEventHandler TESDEPTINFORowDeleting;
            
            public event TESDEPTINFORowChangeEventHandler TESDEPTINFORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTESDEPTINFORow(TESDEPTINFORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TESDEPTINFORow AddTESDEPTINFORow(decimal ID, string ENAME, string CNAME, string FDEPARTMENT, string DEPART_LEVEL, string DEPT_ADMIN1, string DEPT_ADMIN2, bool selected) {
                TESDEPTINFORow rowTESDEPTINFORow = ((TESDEPTINFORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        ENAME,
                        CNAME,
                        FDEPARTMENT,
                        DEPART_LEVEL,
                        DEPT_ADMIN1,
                        DEPT_ADMIN2,
                        selected};
                rowTESDEPTINFORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTESDEPTINFORow);
                return rowTESDEPTINFORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TESDEPTINFODataTable cln = ((TESDEPTINFODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TESDEPTINFODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnENAME = base.Columns["ENAME"];
                this.columnCNAME = base.Columns["CNAME"];
                this.columnFDEPARTMENT = base.Columns["FDEPARTMENT"];
                this.columnDEPART_LEVEL = base.Columns["DEPART_LEVEL"];
                this.columnDEPT_ADMIN1 = base.Columns["DEPT_ADMIN1"];
                this.columnDEPT_ADMIN2 = base.Columns["DEPT_ADMIN2"];
                this.columnselected = base.Columns["selected"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnENAME = new global::System.Data.DataColumn("ENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENAME);
                this.columnCNAME = new global::System.Data.DataColumn("CNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNAME);
                this.columnFDEPARTMENT = new global::System.Data.DataColumn("FDEPARTMENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFDEPARTMENT);
                this.columnDEPART_LEVEL = new global::System.Data.DataColumn("DEPART_LEVEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPART_LEVEL);
                this.columnDEPT_ADMIN1 = new global::System.Data.DataColumn("DEPT_ADMIN1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_ADMIN1);
                this.columnDEPT_ADMIN2 = new global::System.Data.DataColumn("DEPT_ADMIN2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_ADMIN2);
                this.columnselected = new global::System.Data.DataColumn("selected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnselected);
                this.columnID.Caption = "用户序列号";
                this.columnID.DefaultValue = ((decimal)(0m));
                this.columnENAME.Caption = "英文名";
                this.columnCNAME.Caption = "中文名";
                this.columnFDEPARTMENT.Caption = "上层部门";
                this.columnDEPART_LEVEL.Caption = "部门标识";
                this.columnDEPT_ADMIN1.Caption = "部门管理员1";
                this.columnDEPT_ADMIN2.Caption = "部门管理员2";
                this.columnselected.Caption = "选择";
                this.columnselected.DefaultValue = ((bool)(false));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TESDEPTINFORow NewTESDEPTINFORow() {
                return ((TESDEPTINFORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TESDEPTINFORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TESDEPTINFORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TESDEPTINFORowChanged != null)) {
                    this.TESDEPTINFORowChanged(this, new TESDEPTINFORowChangeEvent(((TESDEPTINFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TESDEPTINFORowChanging != null)) {
                    this.TESDEPTINFORowChanging(this, new TESDEPTINFORowChangeEvent(((TESDEPTINFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TESDEPTINFORowDeleted != null)) {
                    this.TESDEPTINFORowDeleted(this, new TESDEPTINFORowChangeEvent(((TESDEPTINFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TESDEPTINFORowDeleting != null)) {
                    this.TESDEPTINFORowDeleting(this, new TESDEPTINFORowChangeEvent(((TESDEPTINFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTESDEPTINFORow(TESDEPTINFORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetEPESSUBJ ds = new DataSetEPESSUBJ();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TESDEPTINFODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TESUSERINFODataTable : global::System.Data.TypedTableBase<TESUSERINFORow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnENAME;
            
            private global::System.Data.DataColumn columnCNAME;
            
            private global::System.Data.DataColumn columnISENABLE;
            
            private global::System.Data.DataColumn columnDEPTID;
            
            private global::System.Data.DataColumn columnPASSWD_PERIOD;
            
            private global::System.Data.DataColumn columnTIMETIRED;
            
            private global::System.Data.DataColumn columnDEPT_ENAME;
            
            private global::System.Data.DataColumn columnDEPT_CNAME;
            
            private global::System.Data.DataColumn columnselected;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TESUSERINFODataTable() {
                this.TableName = "TESUSERINFO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TESUSERINFODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TESUSERINFODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ENAMEColumn {
                get {
                    return this.columnENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CNAMEColumn {
                get {
                    return this.columnCNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISENABLEColumn {
                get {
                    return this.columnISENABLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPTIDColumn {
                get {
                    return this.columnDEPTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PASSWD_PERIODColumn {
                get {
                    return this.columnPASSWD_PERIOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIMETIREDColumn {
                get {
                    return this.columnTIMETIRED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPT_ENAMEColumn {
                get {
                    return this.columnDEPT_ENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPT_CNAMEColumn {
                get {
                    return this.columnDEPT_CNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn selectedColumn {
                get {
                    return this.columnselected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TESUSERINFORow this[int index] {
                get {
                    return ((TESUSERINFORow)(this.Rows[index]));
                }
            }
            
            public event TESUSERINFORowChangeEventHandler TESUSERINFORowChanging;
            
            public event TESUSERINFORowChangeEventHandler TESUSERINFORowChanged;
            
            public event TESUSERINFORowChangeEventHandler TESUSERINFORowDeleting;
            
            public event TESUSERINFORowChangeEventHandler TESUSERINFORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTESUSERINFORow(TESUSERINFORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TESUSERINFORow AddTESUSERINFORow(decimal ID, string ENAME, string CNAME, decimal ISENABLE, decimal DEPTID, decimal PASSWD_PERIOD, System.DateTime TIMETIRED, string DEPT_ENAME, string DEPT_CNAME, bool selected) {
                TESUSERINFORow rowTESUSERINFORow = ((TESUSERINFORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        ENAME,
                        CNAME,
                        ISENABLE,
                        DEPTID,
                        PASSWD_PERIOD,
                        TIMETIRED,
                        DEPT_ENAME,
                        DEPT_CNAME,
                        selected};
                rowTESUSERINFORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTESUSERINFORow);
                return rowTESUSERINFORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TESUSERINFODataTable cln = ((TESUSERINFODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TESUSERINFODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnENAME = base.Columns["ENAME"];
                this.columnCNAME = base.Columns["CNAME"];
                this.columnISENABLE = base.Columns["ISENABLE"];
                this.columnDEPTID = base.Columns["DEPTID"];
                this.columnPASSWD_PERIOD = base.Columns["PASSWD_PERIOD"];
                this.columnTIMETIRED = base.Columns["TIMETIRED"];
                this.columnDEPT_ENAME = base.Columns["DEPT_ENAME"];
                this.columnDEPT_CNAME = base.Columns["DEPT_CNAME"];
                this.columnselected = base.Columns["selected"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnENAME = new global::System.Data.DataColumn("ENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENAME);
                this.columnCNAME = new global::System.Data.DataColumn("CNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNAME);
                this.columnISENABLE = new global::System.Data.DataColumn("ISENABLE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISENABLE);
                this.columnDEPTID = new global::System.Data.DataColumn("DEPTID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPTID);
                this.columnPASSWD_PERIOD = new global::System.Data.DataColumn("PASSWD_PERIOD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPASSWD_PERIOD);
                this.columnTIMETIRED = new global::System.Data.DataColumn("TIMETIRED", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIMETIRED);
                this.columnDEPT_ENAME = new global::System.Data.DataColumn("DEPT_ENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_ENAME);
                this.columnDEPT_CNAME = new global::System.Data.DataColumn("DEPT_CNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_CNAME);
                this.columnselected = new global::System.Data.DataColumn("selected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnselected);
                this.columnID.Caption = "用户序列号";
                this.columnID.DefaultValue = ((decimal)(0m));
                this.columnENAME.Caption = "工号";
                this.columnCNAME.Caption = "中文名";
                this.columnISENABLE.Caption = "是否有效";
                this.columnISENABLE.DefaultValue = ((decimal)(0m));
                this.columnDEPTID.Caption = "部门标识";
                this.columnDEPTID.DefaultValue = ((decimal)(0m));
                this.columnPASSWD_PERIOD.Caption = "密码有效天数";
                this.columnPASSWD_PERIOD.DefaultValue = ((decimal)(0m));
                this.columnTIMETIRED.Caption = "密码有效时间";
                this.columnDEPT_ENAME.Caption = "部门号";
                this.columnDEPT_CNAME.Caption = "部门描述";
                this.columnselected.Caption = "选择";
                this.columnselected.DefaultValue = ((bool)(false));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TESUSERINFORow NewTESUSERINFORow() {
                return ((TESUSERINFORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TESUSERINFORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TESUSERINFORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TESUSERINFORowChanged != null)) {
                    this.TESUSERINFORowChanged(this, new TESUSERINFORowChangeEvent(((TESUSERINFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TESUSERINFORowChanging != null)) {
                    this.TESUSERINFORowChanging(this, new TESUSERINFORowChangeEvent(((TESUSERINFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TESUSERINFORowDeleted != null)) {
                    this.TESUSERINFORowDeleted(this, new TESUSERINFORowChangeEvent(((TESUSERINFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TESUSERINFORowDeleting != null)) {
                    this.TESUSERINFORowDeleting(this, new TESUSERINFORowChangeEvent(((TESUSERINFORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTESUSERINFORow(TESUSERINFORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetEPESSUBJ ds = new DataSetEPESSUBJ();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TESUSERINFODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TESGROUPINFORow : global::System.Data.DataRow {
            
            private TESGROUPINFODataTable tableTESGROUPINFO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TESGROUPINFORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTESGROUPINFO = ((TESGROUPINFODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    try {
                        return ((decimal)(this[this.tableTESGROUPINFO.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESGROUPINFO”中列“ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESGROUPINFO.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ADMINUSERID {
                get {
                    try {
                        return ((decimal)(this[this.tableTESGROUPINFO.ADMINUSERIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESGROUPINFO”中列“ADMINUSERID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESGROUPINFO.ADMINUSERIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME {
                get {
                    try {
                        return ((string)(this[this.tableTESGROUPINFO.NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESGROUPINFO”中列“NAME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESGROUPINFO.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GROUPDESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableTESGROUPINFO.GROUPDESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESGROUPINFO”中列“GROUPDESCRIPTION”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESGROUPINFO.GROUPDESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string APPNAME {
                get {
                    try {
                        return ((string)(this[this.tableTESGROUPINFO.APPNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESGROUPINFO”中列“APPNAME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESGROUPINFO.APPNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ADMINUSERID2 {
                get {
                    try {
                        return ((decimal)(this[this.tableTESGROUPINFO.ADMINUSERID2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESGROUPINFO”中列“ADMINUSERID2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESGROUPINFO.ADMINUSERID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADMINUSERNAME1 {
                get {
                    try {
                        return ((string)(this[this.tableTESGROUPINFO.ADMINUSERNAME1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESGROUPINFO”中列“ADMINUSERNAME1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESGROUPINFO.ADMINUSERNAME1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADMINUSERNAME2 {
                get {
                    try {
                        return ((string)(this[this.tableTESGROUPINFO.ADMINUSERNAME2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESGROUPINFO”中列“ADMINUSERNAME2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESGROUPINFO.ADMINUSERNAME2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool selected {
                get {
                    try {
                        return ((bool)(this[this.tableTESGROUPINFO.selectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESGROUPINFO”中列“selected”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESGROUPINFO.selectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableTESGROUPINFO.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableTESGROUPINFO.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADMINUSERIDNull() {
                return this.IsNull(this.tableTESGROUPINFO.ADMINUSERIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADMINUSERIDNull() {
                this[this.tableTESGROUPINFO.ADMINUSERIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNAMENull() {
                return this.IsNull(this.tableTESGROUPINFO.NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNAMENull() {
                this[this.tableTESGROUPINFO.NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGROUPDESCRIPTIONNull() {
                return this.IsNull(this.tableTESGROUPINFO.GROUPDESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGROUPDESCRIPTIONNull() {
                this[this.tableTESGROUPINFO.GROUPDESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAPPNAMENull() {
                return this.IsNull(this.tableTESGROUPINFO.APPNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAPPNAMENull() {
                this[this.tableTESGROUPINFO.APPNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADMINUSERID2Null() {
                return this.IsNull(this.tableTESGROUPINFO.ADMINUSERID2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADMINUSERID2Null() {
                this[this.tableTESGROUPINFO.ADMINUSERID2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADMINUSERNAME1Null() {
                return this.IsNull(this.tableTESGROUPINFO.ADMINUSERNAME1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADMINUSERNAME1Null() {
                this[this.tableTESGROUPINFO.ADMINUSERNAME1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsADMINUSERNAME2Null() {
                return this.IsNull(this.tableTESGROUPINFO.ADMINUSERNAME2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetADMINUSERNAME2Null() {
                this[this.tableTESGROUPINFO.ADMINUSERNAME2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsselectedNull() {
                return this.IsNull(this.tableTESGROUPINFO.selectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetselectedNull() {
                this[this.tableTESGROUPINFO.selectedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TESDEPTINFORow : global::System.Data.DataRow {
            
            private TESDEPTINFODataTable tableTESDEPTINFO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TESDEPTINFORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTESDEPTINFO = ((TESDEPTINFODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    try {
                        return ((decimal)(this[this.tableTESDEPTINFO.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESDEPTINFO”中列“ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESDEPTINFO.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ENAME {
                get {
                    try {
                        return ((string)(this[this.tableTESDEPTINFO.ENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESDEPTINFO”中列“ENAME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESDEPTINFO.ENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CNAME {
                get {
                    try {
                        return ((string)(this[this.tableTESDEPTINFO.CNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESDEPTINFO”中列“CNAME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESDEPTINFO.CNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FDEPARTMENT {
                get {
                    try {
                        return ((string)(this[this.tableTESDEPTINFO.FDEPARTMENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESDEPTINFO”中列“FDEPARTMENT”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESDEPTINFO.FDEPARTMENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPART_LEVEL {
                get {
                    try {
                        return ((string)(this[this.tableTESDEPTINFO.DEPART_LEVELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESDEPTINFO”中列“DEPART_LEVEL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESDEPTINFO.DEPART_LEVELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPT_ADMIN1 {
                get {
                    try {
                        return ((string)(this[this.tableTESDEPTINFO.DEPT_ADMIN1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESDEPTINFO”中列“DEPT_ADMIN1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESDEPTINFO.DEPT_ADMIN1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPT_ADMIN2 {
                get {
                    try {
                        return ((string)(this[this.tableTESDEPTINFO.DEPT_ADMIN2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESDEPTINFO”中列“DEPT_ADMIN2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESDEPTINFO.DEPT_ADMIN2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool selected {
                get {
                    try {
                        return ((bool)(this[this.tableTESDEPTINFO.selectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESDEPTINFO”中列“selected”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESDEPTINFO.selectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableTESDEPTINFO.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableTESDEPTINFO.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsENAMENull() {
                return this.IsNull(this.tableTESDEPTINFO.ENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetENAMENull() {
                this[this.tableTESDEPTINFO.ENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCNAMENull() {
                return this.IsNull(this.tableTESDEPTINFO.CNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCNAMENull() {
                this[this.tableTESDEPTINFO.CNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFDEPARTMENTNull() {
                return this.IsNull(this.tableTESDEPTINFO.FDEPARTMENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFDEPARTMENTNull() {
                this[this.tableTESDEPTINFO.FDEPARTMENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPART_LEVELNull() {
                return this.IsNull(this.tableTESDEPTINFO.DEPART_LEVELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPART_LEVELNull() {
                this[this.tableTESDEPTINFO.DEPART_LEVELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPT_ADMIN1Null() {
                return this.IsNull(this.tableTESDEPTINFO.DEPT_ADMIN1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPT_ADMIN1Null() {
                this[this.tableTESDEPTINFO.DEPT_ADMIN1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPT_ADMIN2Null() {
                return this.IsNull(this.tableTESDEPTINFO.DEPT_ADMIN2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPT_ADMIN2Null() {
                this[this.tableTESDEPTINFO.DEPT_ADMIN2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsselectedNull() {
                return this.IsNull(this.tableTESDEPTINFO.selectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetselectedNull() {
                this[this.tableTESDEPTINFO.selectedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TESUSERINFORow : global::System.Data.DataRow {
            
            private TESUSERINFODataTable tableTESUSERINFO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TESUSERINFORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTESUSERINFO = ((TESUSERINFODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    try {
                        return ((decimal)(this[this.tableTESUSERINFO.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESUSERINFO”中列“ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESUSERINFO.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ENAME {
                get {
                    try {
                        return ((string)(this[this.tableTESUSERINFO.ENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESUSERINFO”中列“ENAME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESUSERINFO.ENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CNAME {
                get {
                    try {
                        return ((string)(this[this.tableTESUSERINFO.CNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESUSERINFO”中列“CNAME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESUSERINFO.CNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ISENABLE {
                get {
                    try {
                        return ((decimal)(this[this.tableTESUSERINFO.ISENABLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESUSERINFO”中列“ISENABLE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESUSERINFO.ISENABLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DEPTID {
                get {
                    try {
                        return ((decimal)(this[this.tableTESUSERINFO.DEPTIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESUSERINFO”中列“DEPTID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESUSERINFO.DEPTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PASSWD_PERIOD {
                get {
                    try {
                        return ((decimal)(this[this.tableTESUSERINFO.PASSWD_PERIODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESUSERINFO”中列“PASSWD_PERIOD”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESUSERINFO.PASSWD_PERIODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TIMETIRED {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTESUSERINFO.TIMETIREDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESUSERINFO”中列“TIMETIRED”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESUSERINFO.TIMETIREDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPT_ENAME {
                get {
                    try {
                        return ((string)(this[this.tableTESUSERINFO.DEPT_ENAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESUSERINFO”中列“DEPT_ENAME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESUSERINFO.DEPT_ENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPT_CNAME {
                get {
                    try {
                        return ((string)(this[this.tableTESUSERINFO.DEPT_CNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESUSERINFO”中列“DEPT_CNAME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESUSERINFO.DEPT_CNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool selected {
                get {
                    try {
                        return ((bool)(this[this.tableTESUSERINFO.selectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TESUSERINFO”中列“selected”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTESUSERINFO.selectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableTESUSERINFO.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableTESUSERINFO.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsENAMENull() {
                return this.IsNull(this.tableTESUSERINFO.ENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetENAMENull() {
                this[this.tableTESUSERINFO.ENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCNAMENull() {
                return this.IsNull(this.tableTESUSERINFO.CNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCNAMENull() {
                this[this.tableTESUSERINFO.CNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISENABLENull() {
                return this.IsNull(this.tableTESUSERINFO.ISENABLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISENABLENull() {
                this[this.tableTESUSERINFO.ISENABLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPTIDNull() {
                return this.IsNull(this.tableTESUSERINFO.DEPTIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPTIDNull() {
                this[this.tableTESUSERINFO.DEPTIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPASSWD_PERIODNull() {
                return this.IsNull(this.tableTESUSERINFO.PASSWD_PERIODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPASSWD_PERIODNull() {
                this[this.tableTESUSERINFO.PASSWD_PERIODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIMETIREDNull() {
                return this.IsNull(this.tableTESUSERINFO.TIMETIREDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIMETIREDNull() {
                this[this.tableTESUSERINFO.TIMETIREDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPT_ENAMENull() {
                return this.IsNull(this.tableTESUSERINFO.DEPT_ENAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPT_ENAMENull() {
                this[this.tableTESUSERINFO.DEPT_ENAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPT_CNAMENull() {
                return this.IsNull(this.tableTESUSERINFO.DEPT_CNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPT_CNAMENull() {
                this[this.tableTESUSERINFO.DEPT_CNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsselectedNull() {
                return this.IsNull(this.tableTESUSERINFO.selectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetselectedNull() {
                this[this.tableTESUSERINFO.selectedColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TESGROUPINFORowChangeEvent : global::System.EventArgs {
            
            private TESGROUPINFORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TESGROUPINFORowChangeEvent(TESGROUPINFORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TESGROUPINFORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TESDEPTINFORowChangeEvent : global::System.EventArgs {
            
            private TESDEPTINFORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TESDEPTINFORowChangeEvent(TESDEPTINFORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TESDEPTINFORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TESUSERINFORowChangeEvent : global::System.EventArgs {
            
            private TESUSERINFORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TESUSERINFORowChangeEvent(TESUSERINFORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TESUSERINFORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591